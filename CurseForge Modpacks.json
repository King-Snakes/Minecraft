{
  "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
  "meta": {
    "version": "PTDL_v2",
    "update_url": null
  },
  "exported_at": "2025-06-06T13:06:07-05:00",
  "name": "CurseForge Modpacks Test",
  "author": "MexicanKingSnakes@gmail.com",
  "description": "Support for CurseForge modpacks via the CurseForge API & required API key.",
  "features": [
    "eula",
    "java_version",
    "pid_limit"
  ],
  "docker_images": {
    "ghcr.io/king-snakes/multi-openjdk:JDK": "ghcr.io/king-snakes/multi-openjdk:JDK"
  },
  "file_denylist": [],
  "startup": "$(cat .startup)",
  "config": {
    "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"{{server.build.default.port}}\",\r\n            \"query.port\": \"{{server.build.default.port}}\",\r\n            \"level-seed\": \"{{env.WORLD_SEED}}\",\r\n            \"motd\": \"{{env.MOTD}}\",\r\n            \"difficulty\": \"{{env.DIFFICULTY}}\",\r\n            \"resource-pack\": \"{{env.CUSTOM_TEXTUREPACK_URL}}\",\r\n            \"resource-pack-sha1\": \"{{env.CUSTOM_TEXTUREPACK_SHA1}}\"\r\n        }\r\n    }\r\n}",
    "startup": "{\r\n    \"done\": \"For help, type \"\r\n}",
    "logs": "{}",
    "stop": "stop"
  },
  "scripts": {
    "installation": {
      "script": "\"#!/bin/bash\\nshopt -s extglob\\nset -euo pipefail\\n: \\\"${SERVER_DIR:=/mnt/server}\\\" \\\"${TMP:=/mnt/server/tmp}\\\" \\\"${MODPACK_NAME:=}\\\" \\\"${MODPACK_ID:=}\\\" \\\"${VERSION_ID:=}\\\" \\\"${API_KEY:?Missing API_KEY}\\\" \\\"${MOD_DOWNLOAD_THREADS:=4}\\\"\\n[[ -z \\\"$MODPACK_NAME$MODPACK_ID\\\" ]] && { echo \\\"ERROR: MODPACK_NAME or MODPACK_ID must be set.\\\"; exit 1; }\\nCF_GAME_ID=432 CF_CLASS_ID=4471 CF_BASE_URL=https://api.curseforge.com/v1\\nrm -rf \\\"${SERVER_DIR:?}\\\"/* && cd \\\"$SERVER_DIR\\\"\\n\\nmkdir -p logs; LOG_FILE=logs/install_$(date +%Y%m%d_%H%M%S).log\\nexec > >(tee -a \\\"$LOG_FILE\\\") 2>&1; echo \\\"Logging to $LOG_FILE\\\"\\n\\nJVM_ARGS_FILE=\\\"$SERVER_DIR/user_jvm_args.txt\\\"\\nRECOMMENDED_FLAGS=(-Xms4G -Xmx4G -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:+UseStringDeduplication -Dfile.encoding=UTF-8)\\nif [[ ! -f \\\"$JVM_ARGS_FILE\\\" ]]; then\\n  printf '%s\\\\n' \\\"${RECOMMENDED_FLAGS[@]}\\\" > \\\"$JVM_ARGS_FILE\\\"\\nelse\\n  for flag in \\\"${RECOMMENDED_FLAGS[@]}\\\"; do grep -qxF \\\"$flag\\\" \\\"$JVM_ARGS_FILE\\\" || echo \\\"$flag\\\" >> \\\"$JVM_ARGS_FILE\\\"; done\\nfi\\n\\nget_modpack_id(){ [[ -n $MODPACK_ID ]] && return\\n  [[ -z $MODPACK_NAME ]] && { echo \\\"ERROR: MODPACK_ID not set and MODPACK_NAME is empty.\\\"; exit 1; }\\n  slug=$(tr '[:upper:]' '[:lower:]' <<<\\\"$MODPACK_NAME\\\" | sed 's/ /-/g; s/[^a-z0-9-]//g')\\n  MODPACK_ID=$(curl -fsSL -H \\\"x-api-key: $API_KEY\\\" \\\"$CF_BASE_URL/mods/search?gameId=$CF_GAME_ID&classId=$CF_CLASS_ID&slug=$slug\\\" | jq -r '.data[0].id')\\n  [[ -n $MODPACK_ID && $MODPACK_ID != null ]] && return\\n  encoded=$(jq -sRr @uri <<<\\\"$MODPACK_NAME\\\")\\n  for ((i=0;;i+=50)); do\\n    r=$(curl -fsSL -H \\\"x-api-key: $API_KEY\\\" \\\"$CF_BASE_URL/mods/search?gameId=$CF_GAME_ID&classId=$CF_CLASS_ID&searchFilter=$encoded&sortField=TotalDownloads&sortOrder=desc&index=$i&pageSize=50\\\")\\n    MODPACK_ID=$(jq -r --arg n \\\"$MODPACK_NAME\\\" '.data[]|select(.name==$n)|.id' <<<\\\"$r\\\"|head -n1)\\n    [[ -n $MODPACK_ID && $MODPACK_ID != null ]] && return\\n    (( $(jq '.data|length' <<<\\\"$r\\\") < 50 )) && break\\n  done\\n  echo \\\"MODPACK NOT FOUND.\\\" && exit 1\\n}\\n\\nget_download(){\\n  data=$(curl -fsSL -H \\\"x-api-key: $API_KEY\\\" \\\"$CF_BASE_URL/mods/$MODPACK_ID\\\")\\n  [[ -z $VERSION_ID || $VERSION_ID == latest ]] && VERSION_ID=$(jq -r '.data.mainFileId' <<<\\\"$data\\\")\\n  file_data=$(curl -fsSL -H \\\"x-api-key: $API_KEY\\\" \\\"$CF_BASE_URL/mods/$MODPACK_ID/files/$VERSION_ID\\\")\\n  [[ $(jq -r '.data.isServerPack' <<<\\\"$file_data\\\") == false ]] && VERSION_ID=$(jq -r '.data.serverPackFileId // empty' <<<\\\"$file_data\\\")\\n  download_url=$(curl -fsSL -H \\\"x-api-key: $API_KEY\\\" \\\"$CF_BASE_URL/mods/$MODPACK_ID/files/$VERSION_ID/download-url\\\" | jq -r '.data')\\n  curl -sSL \\\"$download_url\\\" -o \\\"$SERVER_DIR/server.zip\\\"\\n}\\n\\nget_loader(){\\n  data=$(curl -fsSL -H \\\"x-api-key: $API_KEY\\\" \\\"$CF_BASE_URL/mods/$MODPACK_ID/files/$VERSION_ID\\\")\\n  [[ $(jq -r '.data.isServerPack' <<<\\\"$data\\\") == true ]] && VERSION_ID=$(jq -r '.data.parentProjectFileId // empty' <<<\\\"$data\\\")\\n  client_url=$(curl -fsSL -H \\\"x-api-key: $API_KEY\\\" \\\"$CF_BASE_URL/mods/$MODPACK_ID/files/$VERSION_ID/download-url\\\" | jq -r '.data')\\n  curl -sSL \\\"$client_url\\\" -o client.zip\\n  unzip -jo client.zip manifest.json -d \\\"$SERVER_DIR\\\" && rm client.zip\\n  mv \\\"$SERVER_DIR/manifest.json\\\" \\\"$SERVER_DIR/client.manifest.json\\\"\\n  m=\\\"$SERVER_DIR/client.manifest.json\\\"\\n  LOADER_ID=$(jq -r '.minecraft.modLoaders[]|select(.primary==true)|.id' \\\"$m\\\")\\n  LOADER_NAME=\\\"${LOADER_ID%%-*}\\\"\\n  LOADER_VERSION=\\\"${LOADER_ID#*-}\\\"\\n  MINECRAFT_VERSION=$(jq -r '.minecraft.version' \\\"$m\\\")\\n}\\n\\nget_java(){\\n  shopt -s extglob\\n  case $MINECRAFT_VERSION in\\n    1.@(8|9|10|11)*) JAVA_VER=8 ;;\\n    1.@(12|13|14|15|16.[0-4])*) JAVA_VER=11 ;;\\n    1.16.5) JAVA_VER=16 ;;\\n    1.@(17|18|19)*) JAVA_VER=17 ;;\\n    1.@(20|21|22|23)*) JAVA_VER=21 ;;\\n    *) JAVA_VER=17; echo \\\"WARN: Unknown version $MINECRAFT_VERSION. Using Java 17.\\\" ;;\\n  esac\\n  JAVA_HOME=\\\"/opt/java/java$JAVA_VER\\\"\\n  export JAVA_HOME PATH=\\\"$JAVA_HOME/bin:$PATH\\\"\\n  echo \\\"Using Java $JAVA_VER from $JAVA_HOME\\\"\\n  echo \\\"$JAVA_VER\\\" > \\\"$SERVER_DIR/.javaver\\\"\\n  java -version || { echo \\\"Java failed to start. Ensure the version exists in the image.\\\"; exit 1; }\\n}\\n\\ndownload_mod(){\\n  local project_id=$1 file_id=$2 modfile=$SERVER_DIR/mods/${file_id}.jar\\n  [[ -f $modfile ]] && { echo \\\"CACHED: $file_id\\\"; return; }\\n  url=$(curl -sSL -H \\\"x-api-key: $API_KEY\\\" \\\"https://api.curseforge.com/v1/mods/${project_id}/files/${file_id}/download-url\\\" | jq -r '.data')\\n  curl -sSL \\\"$url\\\" -o \\\"$modfile\\\" && echo \\\"DOWNLOADED: $file_id\\\" || echo \\\"FAIL: $file_id\\\"\\n}\\n\\njson_download_mods(){\\n  echo \\\"DOWNLOADING MODS...\\\"\\n  mkdir -p \\\"$SERVER_DIR/mods\\\"\\n  while read -r project file; do\\n    download_mod \\\"$project\\\" \\\"$file\\\" &\\n    while (( $(jobs -r | wc -l) >= MOD_DOWNLOAD_THREADS )); do wait -n; done\\n  done < <(jq -r '.files[]|select(.required)|\\\"\\\\(.projectID) \\\\(.fileID)\\\"' \\\"$SERVER_DIR/manifest.json\\\")\\n  wait\\n}\\n\\ndownload_installer(){\\n  local installer_path=$SERVER_DIR/$2\\n  curl -fsSL -A \\\"Mozilla/5.0\\\" \\\"$1\\\" -o \\\"$installer_path\\\" && java -jar \\\"$installer_path\\\" ${3:-} && rm -f \\\"$installer_path\\\" || { echo \\\"Failed to run $2\\\"; exit 1; }\\n}\\n\\njson_download_loader(){\\n  echo \\\"INSTALLING ${LOADER_NAME^^}...\\\"\\n  case $LOADER_NAME in\\n    forge)\\n      ver=\\\"${MINECRAFT_VERSION}-${LOADER_VERSION}\\\"\\n      [[ $MINECRAFT_VERSION =~ 1\\\\.(7\\\\.10|8\\\\.9) ]] && ver=\\\"${ver}-${MINECRAFT_VERSION}\\\"\\n      download_installer \\\"https://maven.minecraftforge.net/net/minecraftforge/forge/${ver}/forge-${ver}-installer.jar\\\" forge-installer.jar \\\"--installServer\\\"\\n      LOADER_PATTERN=\\\"*forge-${ver}*.jar\\\"\\n      ;;\\n    neoforge)\\n      a=\\\"neoforge\\\"; [[ $LOADER_VERSION =~ 1.@(20|21|22|23).1- ]] && a=\\\"forge\\\"\\n      download_installer \\\"https://maven.neoforged.net/releases/net/neoforged/${a}/${LOADER_VERSION}/${a}-${LOADER_VERSION}-installer.jar\\\" neoforge-installer.jar \\\"--installServer\\\"\\n      LOADER_PATTERN=\\\"*${a}-${LOADER_VERSION}*.jar\\\"\\n      ;;\\n    fabric)\\n      url=$(curl -sSL https://meta.fabricmc.net/v2/versions/installer | jq -r '.[0].url')\\n      download_installer \\\"$url\\\" fabric-installer.jar \\\"server -mcversion $MINECRAFT_VERSION -loader $LOADER_VERSION -downloadMinecraft\\\"\\n      LOADER_PATTERN=\\\"*fabric*-server*.jar\\\"\\n      ;;\\n    quilt)\\n      url=$(curl -sSL https://meta.quiltmc.org/v3/versions/installer | jq -r '.[0].url')\\n      download_installer \\\"$url\\\" quilt-installer.jar \\\"install server $MINECRAFT_VERSION $LOADER_VERSION --download-server --install-dir=$SERVER_DIR\\\"\\n      LOADER_PATTERN=\\\"*quilt*-server*.jar\\\"\\n      ;;\\n    *) echo \\\"UNKNOWN LOADER: $LOADER_NAME\\\"; exit 1 ;;\\n  esac\\n\\n  unix_src=$(find \\\"$SERVER_DIR\\\" -type f -iname \\\"unix_args.txt\\\" | head -n1)\\n  user_src=$(find \\\"$SERVER_DIR\\\" -type f -iname \\\"user_jvm_args.txt\\\" | head -n1)\\n  if [[ -n $unix_src || -n $user_src ]]; then\\n    echo \\\"Found JVM-args file(s):\\\"\\n    startup_cmd=\\\"java\\\"\\n    [[ -n $unix_src ]] && { echo \\\"  → $unix_src\\\"; startup_cmd+=\\\" @${unix_src#/mnt/server/}\\\"; }\\n    [[ -n $user_src ]] && { echo \\\"  → $user_src\\\"; startup_cmd+=\\\" @${user_src#/mnt/server/}\\\"; }\\n    echo \\\"$startup_cmd nogui\\\" > \\\"$SERVER_DIR/.startup\\\"\\n    return\\n  fi\\n\\n  echo \\\"Looking for loader jar matching pattern: $LOADER_PATTERN\\\"\\n  jar=$(find \\\"$SERVER_DIR\\\" -type f -iname \\\"$LOADER_PATTERN\\\" ! -iname \\\"*installer*\\\" | head -n1)\\n  [[ -n $jar ]] && { runtime_jar=${jar#/mnt/server/}; echo \\\"java -jar ${runtime_jar}\\\" > \\\"$SERVER_DIR/.startup\\\"; } || { echo \\\"ERROR: Loader jar not found matching pattern $LOADER_PATTERN\\\"; exit 1; }\\n}\\n\\ncleanup_tmp_files(){\\n  mkdir -p \\\"$TMP\\\"\\n  unzip -q \\\"$SERVER_DIR/server.zip\\\" -d \\\"$TMP\\\" || { echo \\\"Failed to unzip server.zip\\\"; exit 1; }\\n  shopt -s dotglob\\n  files=(\\\"$TMP\\\"/*)\\n  [[ ${#files[@]} -eq 0 ]] && { echo \\\"No files extracted from server.zip\\\"; exit 1; }\\n  [[ -d ${files[0]} && ${#files[@]} -eq 1 ]] && files=(\\\"${files[0]}\\\"/*)\\n  cp -ar \\\"${files[@]}\\\" \\\"$SERVER_DIR\\\" || { echo \\\"Failed to copy extracted files\\\"; exit 1; }\\n  rm -rf \\\"$TMP\\\" \\\"$SERVER_DIR/server.zip\\\"\\n}\\n\\ndownload_custom_mods(){\\n  [[ -z ${CUSTOM_MOD_URLS:-} ]] && return\\n  IFS=',' read -ra URLS <<<\\\"$CUSTOM_MOD_URLS\\\"\\n  mkdir -p \\\"$SERVER_DIR/mods\\\"\\n  for url in \\\"${URLS[@]}\\\"; do\\n    echo \\\"CUSTOM MOD: $url\\\"\\n    curl -sSL -o \\\"$SERVER_DIR/mods/$(basename \\\"$url\\\")\\\" \\\"$url\\\" || echo \\\"FAILED TO DOWNLOAD $url\\\"\\n  done\\n}\\n\\nmain(){\\n  get_modpack_id\\n  get_download\\n  get_loader\\n  get_java\\n  cd \\\"$SERVER_DIR\\\"\\n  cleanup_tmp_files\\n  [[ -f \\\"$SERVER_DIR/manifest.json\\\" ]] && json_download_mods\\n  [[ -d \\\"$SERVER_DIR/overrides\\\" ]] && { cp -r \\\"$SERVER_DIR/overrides/\\\"* \\\"$SERVER_DIR\\\" && rm -r \\\"$SERVER_DIR/overrides\\\"; }\\n  [[ -f \\\"$SERVER_DIR/client.manifest.json\\\" ]] && json_download_loader\\n  download_custom_mods\\n  echo \\\"INSTALL COMPLETE.\\\"\\n}\\n\\nmain \\\"$@\\\"\\n\"",
      "container": "ghcr.io/king-snakes/multi-openjdk:JDK",
      "entrypoint": "bash"
    }
  },
  "variables": [
    {
      "name": "MODPACK NAME",
      "description": "SEARCH BY NAME, MAKE SURE NAME IS EXACT AS SHOWN AT: https://www.curseforge.com/minecraft/modpacks/",
      "env_variable": "MODPACK_NAME",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "MODPACK ID",
      "description": "SEARCH BY ID, MAKE SURE ID IS EXACT AS SHOWN AT: https://www.curseforge.com/minecraft/modpacks/",
      "env_variable": "MODPACK_ID",
      "default_value": "925200",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "MODPACK VERSION",
      "description": "SELECT MODPACK VERSION TO INSTALL, LEAVE BLANK TO USE LATEST",
      "env_variable": "VERSION_ID",
      "default_value": "latest",
      "user_viewable": true,
      "user_editable": true,
      "rules": "string",
      "field_type": "text"
    },
    {
      "name": "CURSEFORGE API KEY",
      "description": "CURSEFORGE API KEY IS REQUIRED - SEE: https://support.curseforge.com/en/support/solutions/articles/9000208346-about-the-curseforge-api-and-how-to-apply-for-a-key",
      "env_variable": "API_KEY",
      "default_value": "$2a$10$Pe78CsU2U9QuoK2r9ce1L.cRUxbqv4eLYXDEIdzrDWOHc49ihCfs.",
      "user_viewable": true,
      "user_editable": true,
      "rules": "required|string|max:60",
      "field_type": "text"
    },
    {
      "name": "MINECRAFT - WORLD SEED",
      "description": "SPECIFY WORLD SEED TO USE FOR THE SERVER",
      "env_variable": "WORLD_SEED",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "MINECRAFT - MOTD",
      "description": "SPECIFY MESSAGE OF THE DAY TO USE FOR THE SERVER",
      "env_variable": "MOTD",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "MINECRAFT - DIFFICULTY",
      "description": "SET THE DIFFICULTY LEVEL FOR THE SERVER (EASY, NORMAL, HARD)",
      "env_variable": "DIFFICULTY",
      "default_value": "hard",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "CUSTOM_TEXTUREPACK_URL",
      "description": "PROVIDE URL TO TEXTUREPACK",
      "env_variable": "CUSTOM_TEXTUREPACK_URL",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "CUSTOM TEXTUREPACK SHA1",
      "description": "SHA1 HASH OF CUSTOM TEXTUREPACK FOR CLIENT VALIDATION",
      "env_variable": "CUSTOM_TEXTUREPACK_SHA1",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    },
    {
      "name": "CUSTOM MOD URLS",
      "description": "PROVIDE COMMA-SEPARATED URLS FOR CUSTOM MODS TO BE INSTALL INTO THE MODS FOLDER",
      "env_variable": "CUSTOM_MOD_URLS",
      "default_value": "",
      "user_viewable": true,
      "user_editable": true,
      "rules": "nullable|string",
      "field_type": "text"
    }
  ]
}
